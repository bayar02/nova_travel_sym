{% extends 'base.html.twig' %}

{% block title %}User Dashboard{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <style>
        #admin-sidebar {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            z-index: 1000;
            width: 250px;
            transition: width 300ms ease-in-out;
            background-color: #282a36;
            overflow-x: hidden;
        }
        
        #admin-sidebar.close {
            width: 60px;
        }
        
        #admin-sidebar ul {
            padding: 0;
            margin: 0;
            list-style: none;
        }
        
        #admin-sidebar li {
            margin: 0;
            padding: 0;
        }
        
        #admin-sidebar a, 
        #admin-sidebar button {
            display: flex;
            align-items: center;
            padding: 15px;
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            transition: all 0.2s;
        }
        
        #admin-sidebar a:hover, 
        #admin-sidebar button:hover {
            background-color: rgba(255, 255, 255, 0.1);
            color: #fff;
        }
        
        #admin-sidebar li.active a {
            background-color: rgba(255, 255, 255, 0.15);
            color: #fff;
            border-left: 4px solid #4e73df;
        }
        
        #admin-sidebar span {
            margin-left: 10px;
            white-space: nowrap;
        }
        
        #admin-sidebar-toggle-btn {
            background: none;
            border: none;
            cursor: pointer;
            width: 100%;
            text-align: left;
            padding: 15px;
            color: rgba(255, 255, 255, 0.8);
        }

        .admin-content-wrapper {
            padding: 25px 25px 25px 85px;
            margin: 0;
            transition: padding-left 300ms ease-in-out;
            min-height: 100vh;
            box-sizing: border-box;
            background-color: #f8f9fc;
        }
        
        #admin-sidebar:not(.close) + .admin-content-wrapper {
            padding-left: 275px;
        }

        /* Table styles */
        .flights-table {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .flights-table th {
            background-color: #4e73df;
            color: white;
            font-weight: 500;
            padding: 15px;
        }

        .flights-table td {
            padding: 15px;
            vertical-align: middle;
        }

        .flights-table tbody tr:hover {
            background-color: #f8f9fc;
        }

        .action-buttons .btn {
            margin: 0 5px;
        }

        /* Search box styles */
        .search-box {
            background-color: #003b95;
            color: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .search-box h3 {
            color: white;
            font-size: 22px;
            margin-bottom: 15px;
        }

        .search-box .form-control {
            border-radius: 4px;
            height: 50px;
            font-size: 16px;
        }

        .search-box .btn-primary {
            background-color: #0071c2;
            border-color: #0071c2;
            height: 50px;
            font-size: 18px;
            font-weight: 500;
        }

        .search-box .btn-primary:hover {
            background-color: #005999;
        }

        .filter-bar {
            background-color: white;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }

        /* Modal styles */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 2000;
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }
        
        .modal-overlay.active {
            opacity: 1;
            visibility: visible;
        }
        
        .modal-container {
            background-color: #fff;
            border-radius: 12px;
            box-shadow: 0 15px 35px rgba(50, 50, 93, 0.1), 0 5px 15px rgba(0, 0, 0, 0.07);
            width: 90%;
            max-width: 700px;
            max-height: 90vh;
            overflow-y: auto;
            transform: translateY(20px);
            transition: all 0.3s ease;
            position: relative;
            padding: 0;
        }
        
        .modal-overlay.active .modal-container {
            transform: translateY(0);
        }
        
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 30px;
            border-bottom: 1px solid #e0e0e0;
            background: linear-gradient(135deg, #4e73df 0%, #224abe 100%);
            color: white;
            border-radius: 12px 12px 0 0;
        }
        
        .modal-title {
            font-size: 24px;
            font-weight: 600;
            margin: 0;
        }
        
        .modal-close {
            background: none;
            border: none;
            font-size: 24px;
            color: white;
            cursor: pointer;
            opacity: 0.8;
            transition: opacity 0.2s;
        }
        
        .modal-close:hover {
            opacity: 1;
        }
        
        .modal-body {
            padding: 30px;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const toggleButton = document.getElementById('admin-sidebar-toggle-btn');
            const sidebar = document.getElementById('admin-sidebar');

            function toggleAdminSidebar(e) {
                e.preventDefault();
                if (sidebar && toggleButton) {
                    sidebar.classList.toggle('close');
                    toggleButton.classList.toggle('rotate');
                }
            }

            if (toggleButton) {
                toggleButton.addEventListener('click', toggleAdminSidebar);
            }

            // Store sidebar state in localStorage
            if (sidebar) {
                const sidebarState = localStorage.getItem('userSidebarState');
                if (sidebarState === 'closed') {
                    sidebar.classList.add('close');
                    toggleButton?.classList.add('rotate');
                }

                // Update localStorage when sidebar state changes
                const observer = new MutationObserver(() => {
                    localStorage.setItem('userSidebarState', 
                        sidebar.classList.contains('close') ? 'closed' : 'open'
                    );
                });

                observer.observe(sidebar, {
                    attributes: true,
                    attributeFilter: ['class']
                });
            }

            // Initialize date pickers
            flatpickr(".date-picker", {
                dateFormat: "Y-m-d",
                minDate: "today"
            });

            // Modal functionality
            const flightModal = document.getElementById('flightDetailsModal');
            const closeFlightModal = document.getElementById('closeFlightModal');
            const bookingModal = document.getElementById('flightBookingModal');
            const closeBookingModal = document.getElementById('closeBookingModal');

            if (closeFlightModal && flightModal) {
                closeFlightModal.addEventListener('click', function() {
                    flightModal.classList.remove('active');
                });

                flightModal.addEventListener('click', function(e) {
                    if (e.target === flightModal) {
                        flightModal.classList.remove('active');
                    }
                });
            }
            
            if (closeBookingModal && bookingModal) {
                closeBookingModal.addEventListener('click', function() {
                    bookingModal.classList.remove('active');
                });

                bookingModal.addEventListener('click', function(e) {
                    if (e.target === bookingModal) {
                        bookingModal.classList.remove('active');
                    }
                });
            }

            // Initialize autocomplete for destination
            $("#destination").autocomplete({
                source: function(request, response) {
                    $.get("{{ path('app_vol_airports_autocomplete') }}", {
                        term: request.term,
                        type: 'destination'
                    }, function(data) {
                        response(data.airports);
                    });
                },
                minLength: 2,
                change: function(event, ui) {
                    performSearch();
                }
            });

            // Initialize autocomplete for arrival airport
            $("#aeroport_arrivee").autocomplete({
                source: function(request, response) {
                    $.get("{{ path('app_vol_airports_autocomplete') }}", {
                        term: request.term,
                        type: 'arrival'
                    }, function(data) {
                        response(data.airports);
                    });
                },
                minLength: 2,
                change: function(event, ui) {
                    performSearch();
                }
            });

            // Live search function with proper table structure
            let searchTimeout;
            function performSearch() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(() => {
                    const searchData = {
                        destination: $("#destination").val(),
                        dateStart: $("#dateStart").val(),
                        dateEnd: $("#dateEnd").val(),
                        sortBy: $("#sortBy").val()
                    };

                    $.get("{{ path('app_vol_search_ajax') }}", searchData, function(response) {
                        if (response.success) {
                            updateFlightsTable(response.flights);
                        } else {
                            console.error('Search failed:', response);
                            $(".flights-table").html('<div class="alert alert-danger m-3">An error occurred while searching. Please try again.</div>');
                        }
                    }).fail(function(jqXHR, textStatus, errorThrown) {
                        console.error('AJAX error:', textStatus, errorThrown);
                        $(".flights-table").html('<div class="alert alert-danger m-3">An error occurred while searching. Please try again.</div>');
                    });
                }, 300);
            }

            // Update flights table with search results
            function updateFlightsTable(flights) {
                const tableContainer = $(".flights-table");
                
                if (!flights || flights.length === 0) {
                    tableContainer.html('<div class="alert alert-info m-3">No flights found. Try different search criteria.</div>');
                    $(".search-results-title").text('No flights found');
                    return;
                }

                // Create table structure
                let table = `
                    <table class="table table-hover mb-0">
                        <thead>
                            <tr>
                                <th>Airline</th>
                                <th>From</th>
                                <th>To</th>
                                <th>Departure</th>
                                <th>Arrival</th>
                                <th>Price</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                `;

                // Add rows
                flights.forEach(flight => {
                    table += `
                        <tr>
                            <td>${flight.compagnie}</td>
                            <td>${flight.aeroportDepart}</td>
                            <td>${flight.aeroportArrivee}</td>
                            <td>${flight.dateDepart}</td>
                            <td>${flight.dateArrivee}</td>
                            <td>${flight.prix} €</td>
                            <td class="action-buttons">
                                <button class="btn btn-sm btn-info" onclick="showFlightDetails(${flight.id}, '${flight.compagnie}', '${flight.destination}', '${flight.aeroportDepart}', '${flight.aeroportArrivee}', '${flight.dateDepart}', '${flight.dateArrivee}', ${flight.prix})">
                                    Details
                                </button>
                                <button class="btn btn-sm btn-primary" onclick="showBookingForm(${flight.id}, '${flight.compagnie}', '${flight.destination}', '${flight.aeroportDepart}', '${flight.aeroportArrivee}', '${flight.dateDepart}', '${flight.dateArrivee}', ${flight.prix})">
                                    Book
                                </button>
                            </td>
                        </tr>
                    `;
                });

                table += '</tbody></table>';
                tableContainer.html(table);

                // Update search results count
                $(".search-results-title").text(`${flights.length} flights found`);
            }

            // Attach event listeners for live search
            $("#destination").on('keyup', function() {
                if ($(this).val().length >= 2) {
                    performSearch();
                }
            });

            $("#dateStart, #dateEnd, #sortBy").on('change', performSearch);

            // Initial search on page load
            performSearch();
        });

        // Current flight ID for booking
        let currentFlightId = null;
        let currentFlightPrice = 0;

        // Function to show flight details
        function showFlightDetails(id, compagnie, destination, aeroportDepart, aeroportArrivee, dateDepart, dateArrivee, prix) {
            const modal = document.getElementById('flightDetailsModal');
            currentFlightId = id;
            currentFlightPrice = prix;
            
            document.getElementById('flightTitle').textContent = `${compagnie} - ${destination}`;
            document.getElementById('flightFrom').textContent = aeroportDepart;
            document.getElementById('flightTo').textContent = aeroportArrivee;
            document.getElementById('flightDeparture').textContent = dateDepart;
            document.getElementById('flightArrival').textContent = dateArrivee;
            document.getElementById('flightPrice').textContent = prix;
            
            document.getElementById('bookFlightLink').href = "{{ path('app_reservation_vol_book', {'id': 'FLIGHT_ID'}) }}".replace('FLIGHT_ID', id);
            
            if (modal) {
                modal.classList.add('active');
            }
        }
        
        function showBookingFormFromDetails() {
            document.getElementById('flightDetailsModal').classList.remove('active');
            
            const compagnie = document.getElementById('flightTitle').textContent.split(' - ')[0];
            const destination = document.getElementById('flightTitle').textContent.split(' - ')[1];
            const aeroportDepart = document.getElementById('flightFrom').textContent;
            const aeroportArrivee = document.getElementById('flightTo').textContent;
            const dateDepart = document.getElementById('flightDeparture').textContent;
            const dateArrivee = document.getElementById('flightArrival').textContent;
            const prix = parseFloat(document.getElementById('flightPrice').textContent);
            
            showBookingForm(currentFlightId, compagnie, destination, aeroportDepart, aeroportArrivee, dateDepart, dateArrivee, prix);
        }
        
        function showBookingForm(id, compagnie, destination, aeroportDepart, aeroportArrivee, dateDepart, dateArrivee, prix) {
            const modal = document.getElementById('flightBookingModal');
            currentFlightId = id;
            currentFlightPrice = prix;
            
            document.getElementById('bookingFlightTitle').textContent = `${compagnie} - ${destination}`;
            document.getElementById('bookingFlightFrom').textContent = aeroportDepart;
            document.getElementById('bookingFlightTo').textContent = aeroportArrivee;
            document.getElementById('bookingFlightDeparture').textContent = dateDepart;
            document.getElementById('bookingFlightArrival').textContent = dateArrivee;
            
            document.getElementById('bookingForm').action = "{{ path('app_reservation_vol_book', {'id': 'FLIGHT_ID'}) }}".replace('FLIGHT_ID', id);
            
            updateBookingPrice();
            
            if (modal) {
                modal.classList.add('active');
            }
        }
        
        function updateBookingPrice() {
            const nbTickets = parseInt(document.getElementById('nb_billets').value);
            const classType = document.getElementById('classe').value;
            
            let multiplier = 1;
            switch(classType) {
                case 'Business':
                    multiplier = 1.5;
                    break;
                case 'First Class':
                    multiplier = 2;
                    break;
                default:
                    multiplier = 1;
            }
            
            const classPrice = Math.round(currentFlightPrice * multiplier * 100) / 100;
            const totalPrice = Math.round(classPrice * nbTickets * 100) / 100;
            
            document.getElementById('nb-tickets').textContent = nbTickets;
            document.getElementById('class-name').textContent = classType;
            document.getElementById('class-price').textContent = classPrice;
            document.getElementById('total-price').textContent = totalPrice;
        }
    </script>
{% endblock %}

{% block body %}
{# Sidebar HTML #}
<nav id="admin-sidebar">
    <ul>
        <li>
            <button id="admin-sidebar-toggle-btn" title="Toggle Sidebar">
                <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="currentColor">
                    <path d="m313-480 155 156q11 11 11.5 27.5T468-268q-11 11-28 11t-28-11L228-452q-6-6-8.5-13t-2.5-15q0-8 2.5-15t8.5-13l184-184q11-11 27.5-11.5T468-692q11 11 11 28t-11 28L313-480Zm264 0 155 156q11 11 11.5 27.5T732-268q-11 11-28 11t-28-11L492-452q-6-6-8.5-13t-2.5-15q0-8 2.5-15t8.5-13l184-184q11-11 27.5-11.5T732-692q11 11 11 28t-11 28L577-480Z"/>
                </svg>
            </button>
        </li>
        <li class="{% if app.request.attributes.get('_route') == 'user_dashboard' %}active{% endif %}">
            <a href="{{ path('user_dashboard') }}">
                <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="currentColor">
                    <path d="M240-200h120v-200q0-17 11.5-28.5T400-440h160q17 0 28.5 11.5T600-400v200h120v-360L480-740 240-560v360Zm-80 0v-360q0-19 8.5-36t23.5-28l240-180q21-16 48-16t48 16l240 180q15 11 23.5 28t8.5 36v360q0 33-23.5 56.5T720-120H560q-17 0-28.5-11.5T520-160v-200h-80v200q0 17-11.5 28.5T400-120H240q-33 0-56.5-23.5T160-200Zm320-270Z"/>
                </svg>
                <span>Home</span>
            </a>
        </li>
        <li class="{% if app.request.attributes.get('_route') == 'app_user_flights' %}active{% endif %}">
            <a href="{{ path('app_user_flights') }}">
                <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="currentColor">
                    <path d="M0 0h24v24H0V0z" fill="none"/>
                    <path d="M21 16v-2l-8-5V3.5c0-.83-.67-1.5-1.5-1.5S10 2.67 10 3.5V9l-8 5v2l8-2.5V19l-2 1.5V22l3.5-1 3.5 1v-1.5L13 19v-5.5l8 2.5z"/>
                </svg>
                <span>My Flights</span>
            </a>
        </li>
        <li class="logout-item">
            <a href="{{ path('app_logout') }}" class="btn btn-danger">
                <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="currentColor">
                    <path d="M0 0h24v24H0z" fill="none"/>
                    <path d="M17 7l-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5zM4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4V5z"/>
                </svg>
                <span>Log Out</span>
            </a>
        </li>
    </ul>
</nav>

{# User Dashboard Content #}
<div class="admin-content-wrapper">
    <div class="container-fluid">
        <h1 class="mb-4">Welcome to your Dashboard, {{ app.user.userIdentifier }}!</h1>
        
        <!-- Search Box -->
        <div class="search-box">
            <h3>Search for Flights</h3>
                <div class="row g-3">
                <div class="col-md-3">
                    <label for="destination" class="form-label">Destination</label>
                    <input type="text" class="form-control" id="destination" name="destination" placeholder="Enter destination" value="{{ searchCriteria.destination }}">
                    </div>

                    <div class="col-md-3">
                        <label for="dateStart" class="form-label">Start Date</label>
                        <input type="date" class="form-control date-picker" id="dateStart" name="dateStart" placeholder="Check-in" value="{{ searchCriteria.dateStart }}">
                    </div>
                    <div class="col-md-3">
                        <label for="dateEnd" class="form-label">End Date</label>
                        <input type="date" class="form-control date-picker" id="dateEnd" name="dateEnd" placeholder="Check-out" value="{{ searchCriteria.dateEnd }}">
                    </div>
                </div>
        </div>
        
            <!-- Filter Bar -->
            <div class="filter-bar d-flex justify-content-between align-items-center">
                <div class="search-results-title">
                    {% if upcomingFlights|length > 0 %}
                        {{ upcomingFlights|length }} flights found
                    {% else %}
                        No flights found
                    {% endif %}
                </div>
                <div class="filters">
                <div class="d-flex align-items-center">
                        <label for="sortBy" class="me-2">Sort by:</label>
                    <select class="form-select" id="sortBy" name="sortBy">
                            <option value="date" {% if sortBy == 'date' %}selected{% endif %}>Date</option>
                            <option value="price_asc" {% if sortBy == 'price_asc' %}selected{% endif %}>Price (Low to High)</option>
                            <option value="price_desc" {% if sortBy == 'price_desc' %}selected{% endif %}>Price (High to Low)</option>
                        </select>
                </div>
            </div>
        </div>
        
        <!-- Flights Table -->
        <div class="flights-table">
                {% if upcomingFlights is empty %}
                <div class="alert alert-info m-3">No flights found. Try different search criteria.</div>
                {% else %}
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Airline</th>
                            <th>From</th>
                            <th>To</th>
                            <th>Departure</th>
                            <th>Arrival</th>
                            <th>Price</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                            {% for flight in upcomingFlights %}
                            <tr>
                                <td>{{ flight.compagnie }}</td>
                                <td>{{ flight.aeroportDepart }}</td>
                                <td>{{ flight.aeroportArrivee }}</td>
                                <td>{{ flight.dateDepart ? flight.dateDepart|date('d M Y H:i') : '' }}</td>
                                <td>{{ flight.dateArrivee ? flight.dateArrivee|date('d M Y H:i') : '' }}</td>
                                <td>{{ flight.prix }} €</td>
                                <td class="action-buttons">
                                                <button class="btn btn-sm btn-info" onclick="showFlightDetails({{ flight.id }}, '{{ flight.compagnie }}', '{{ flight.destination }}', '{{ flight.aeroportDepart }}', '{{ flight.aeroportArrivee }}', '{{ flight.dateDepart ? flight.dateDepart|date('d M Y H:i') : '' }}', '{{ flight.dateArrivee ? flight.dateArrivee|date('d M Y H:i') : '' }}', {{ flight.prix }})">
                                                    Details
                                                </button>
                                    <button class="btn btn-sm btn-primary" onclick="showBookingForm({{ flight.id }}, '{{ flight.compagnie }}', '{{ flight.destination }}', '{{ flight.aeroportDepart }}', '{{ flight.aeroportArrivee }}', '{{ flight.dateDepart ? flight.dateDepart|date('d M Y H:i') : '' }}', '{{ flight.dateArrivee ? flight.dateArrivee|date('d M Y H:i') : '' }}', {{ flight.prix }})">
                                        Book
                                    </button>
                                </td>
                            </tr>
                            {% endfor %}
                    </tbody>
                </table>
                
                <!-- Pagination -->
                <div class="d-flex justify-content-center py-4" style="background: #f8f9fc; border-top: 1px solid #e3e6f0;">
                    {{ knp_pagination_render(upcomingFlights) }}
                    </div>
                {% endif %}
        </div>
    </div>
</div>

<!-- Flight Details Modal -->
<div id="flightDetailsModal" class="modal-overlay">
    <div class="modal-container">
        <div class="modal-header">
            <h3 class="modal-title">Flight Details</h3>
            <button class="modal-close" id="closeFlightModal">&times;</button>
        </div>
        <div class="modal-body">
            <div class="row mb-4">
                <div class="col-12">
                    <h4 id="flightTitle"></h4>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <p><strong>From:</strong> <span id="flightFrom"></span></p>
                    <p><strong>Departure Date:</strong> <span id="flightDeparture"></span></p>
                </div>
                <div class="col-md-6">
                    <p><strong>To:</strong> <span id="flightTo"></span></p>
                    <p><strong>Arrival Date:</strong> <span id="flightArrival"></span></p>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <p><strong>Price:</strong> <span id="flightPrice"></span> €</p>
                </div>
                <div class="col-md-6 text-end">
                    <a id="bookFlightLink" href="#" class="btn btn-primary" onclick="showBookingFormFromDetails(); return false;">Book this Flight</a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Flight Booking Modal -->
<div id="flightBookingModal" class="modal-overlay">
    <div class="modal-container">
        <div class="modal-header">
            <h3 class="modal-title">Book Your Flight</h3>
            <button class="modal-close" id="closeBookingModal">&times;</button>
        </div>
        <div class="modal-body">
            <div class="row mb-4">
                <div class="col-12">
                    <h4 id="bookingFlightTitle"></h4>
                </div>
            </div>
            
            <div class="row mb-3">
                <div class="col-md-6">
                    <p><strong>From:</strong> <span id="bookingFlightFrom"></span></p>
                    <p><strong>Departure:</strong> <span id="bookingFlightDeparture"></span></p>
                </div>
                <div class="col-md-6">
                    <p><strong>To:</strong> <span id="bookingFlightTo"></span></p>
                    <p><strong>Arrival:</strong> <span id="bookingFlightArrival"></span></p>
                </div>
            </div>
            
            <form id="bookingForm" method="post" action="">
                <div class="mb-3">
                    <label for="classe" class="form-label">Class</label>
                    <select class="form-select" id="classe" name="classe" required onchange="updateBookingPrice()">
                        <option value="Economy" selected>Economy</option>
                        <option value="Business">Business</option>
                        <option value="First Class">First Class</option>
                    </select>
                </div>
                
                <div class="mb-3">
                    <label for="nb_billets" class="form-label">Number of Tickets</label>
                    <select class="form-select" id="nb_billets" name="nb_billets" required onchange="updateBookingPrice()">
                        {% for i in 1..10 %}
                            <option value="{{ i }}" {% if i == 1 %}selected{% endif %}>{{ i }}</option>
                        {% endfor %}
                    </select>
                </div>
                
                <div class="price-summary" style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-top: 30px;">
                    <h4>Price Summary</h4>
                    <div id="price-details">
                        <p><span id="nb-tickets">1</span> × <span id="class-price"></span> € (<span id="class-name">Economy</span>)</p>
                    </div>
                    <div style="font-size: 24px; font-weight: bold; color: #0071c2; margin-top: 10px;">
                        Total: <span id="total-price"></span> €
                    </div>
                </div>
                
                <div class="mt-4">
                    <button type="submit" class="btn btn-primary btn-lg w-100">Confirm Booking</button>
                </div>
            </form>
        </div>
    </div>
</div>
{% endblock %} 